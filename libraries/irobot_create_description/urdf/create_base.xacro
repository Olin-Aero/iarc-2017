<?xml version="1.0"?>

<robot
    xmlns:xacro="http://ros.org/wiki/xacro"
    xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">

    <xacro:arg name="ns" default="target0"/>

    <!-- Included URDF Files -->
    <xacro:include filename="$(find irobot_create_description)/urdf/materials.urdf.xacro" />
    <xacro:include filename="$(find irobot_create_description)/urdf/create_wheel.xacro" />

    <!-- Properties (Constants) -->
    <xacro:property name="M_PI" value="3.14159"/>

    <xacro:property name="base_size_x" value="0.217" />
    <xacro:property name="base_size_y" value="0.280" />
    <xacro:property name="base_size_z" value="0.155" />

    <xacro:property name="top_size_x" value="0.3937" />
    <xacro:property name="top_size_y" value="0.3556" />
    <xacro:property name="top_size_z" value="0.0020" />

    <xacro:property name="wheel_radius" value="0.0346" />
    <xacro:property name="wheel_length" value="0.02" />
    <xacro:property name="wheel_separation" value="0.26" />


    <xacro:macro name="wheel_xmission" params="wheel_prefix">
        <transmission name="${wheel_prefix}_wheel_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <actuator name="${wheel_prefix}_wheel_motor">
                <hardwareInterface>VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
            <joint name="${wheel_prefix}_wheel_joint">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
        </transmission>
    </xacro:macro>

    <xacro:macro name="create">
        <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
             navigation stack depends on this frame -->
        <link name="base_footprint">
            <!--
            <inertial>
                <mass value="0.0001" />
                <origin xyz="0 0 0" />
                <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                    iyy="0.0001" iyz="0.0" 
                    izz="0.0001" />
            </inertial>
            -->
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
                <material name="Green" />
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
            </collision>
        </link>

        <joint name="base_footprint_joint" type="fixed">
            <!-- NB: While you would think this would make it go up, it is oddly reversed.
                 This moves the joint to 0,0,0 where we want it for rviz, etc. -->
            <origin xyz="0 0 ${base_size_z/2-0.051}" rpy="0 0 0" />        
            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>

        <!-- Links and Joints (i.e., the robot) -->
        <link name="base_link">
            <inertial>
                <mass value="3.58" />
                <origin xyz="${-base_size_x/2} 0 ${base_size_z/2}" />
                <inertia ixx="1.0" ixy="0.0" ixz="0.0"
                    iyy="1.0" iyz="0.0" 
                    izz="1.0" />
            </inertial>

            <visual>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://irobot_create_description/meshes/create_body.dae"/>
                </geometry>
                <material name="Blue" />
            </visual>

            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://irobot_create_description/meshes/create_body.stl"/>
                </geometry>
            </collision>
        </link>

        <joint name="rear_wheel_joint" type="continuous" >
            <origin xyz="-0.12 0 -0.035" rpy="0 0 0" />   
            <parent link="base_link" />
            <child link="rear_wheel_link"/>
            <axis xyz="0 1 0" />
            <anchor xyz="0 0 0" />
            <limit effort="10" velocity="100" k_velocity="0" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <link name="rear_wheel_link">
            <inertial>
                <mass value="0.001"/>
                <origin xyz="0 0 0" />
                <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
                    iyy="0.015218160428" iyz="-0.000004273467"
                    izz="0.011763977943" />
            </inertial>

            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <sphere radius="0.008" />
                </geometry>
                <material name="Blue" />
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <sphere radius="0.008" />
                </geometry>
            </collision>
        </link>

        <gazebo reference="rear_wheel_link">
            <mu1 value="10.0" />
            <mu2 value="10.0" />
            <kp  value="1000000.0" />
            <kd  value="1.0" />
        </gazebo>

        <joint name="base_caster_support_joint" type="continuous">
            <origin xyz="0.13 0 -0.023" rpy="0 0 0" />
            <parent link="base_link" />
            <child link="base_caster_support_link"/>

            <axis xyz="0 0 1" />
            <anchor xyz="0.01 0 0" />
            <limit effort="100" velocity="100" k_velocity="0" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <wheel_xmission wheel_prefix="rear"/>
        <!--
        <transmission type="pr2_mechanism_model/SimpleTransmission" name="rear_wheel_trans">
            <actuator name="rear_wheel_motor" />
            <joint name="rear_wheel_joint" />
            <mechanicalReduction>1.0</mechanicalReduction>
        </transmission>
        -->

        <link name="base_caster_support_link">
            <inertial>
                <mass value="5.0"/>
                <origin xyz="0 0 0" />
                <inertia ixx="0.01" ixy="0.0" ixz="0.0"
                    iyy="0.01" iyz="0.0"
                    izz="0.01" />
            </inertial>

            <visual>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="0.001" length="0.037" />
                </geometry>
            </visual>

            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="0.001" length="0.037" />
                </geometry>
            </collision>
        </link>

        <joint name="caster_wheel_joint" type="continuous">
            <origin xyz="-0.008 0 -0.0130" rpy="0 0 0" />
            <parent link="base_caster_support_link" />
            <child link="caster_wheel_link" />      

            <axis xyz="0 1 0" />
            <anchor xyz="0 0 0" />
            <limit effort="100" velocity="100" k_velocity="0" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <wheel_xmission wheel_prefix="caster"/>

        <!--
        <transmission type="pr2_mechanism_model/SimpleTransmission" name="caster_wheel_trans">
            <actuator name="caster_wheel_motor" />
            <joint name="caster_wheel_joint" />
            <mechanicalReduction>1.0</mechanicalReduction>
        </transmission>
        -->

        <link name="caster_wheel_link">
            <inertial>
                <mass value="1.0" /> 
                <origin xyz="0 0 0" rpy="0 0 0" />
                <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
                    iyy="0.015218160428" iyz="-0.000004273467"
                    izz="0.011763977943" />
            </inertial>

            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="0.007" length="0.015" /> 
                </geometry>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="0.007" length="0.015" /> 
                </geometry>
            </collision>
        </link>

        <gazebo reference="caster_wheel_link">
            <mu1 value="50.0" />
            <mu2 value="50.0" />
            <kp  value="1000000.0" />
            <kd  value="1.0" />
        </gazebo>

        <!-- MACRO INSTANTIATION -->

        <create_wheel suffix="left" parent="base_link" reflect="-0.75"/>
        <create_wheel suffix="right" parent="base_link" reflect="0.75"/>

        <wheel_xmission wheel_prefix="base_link_left"/>
        <wheel_xmission wheel_prefix="base_link_right"/>
        <!-- CONTROLLERS -->

        <gazebo>
            <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
                <alwaysOn>true</alwaysOn>
                <update>100</update>
                <robotNamespace>$(arg ns)</robotNamespace>
                <!-- TF -->
                <commandTopic>cmd_vel</commandTopic>
                <odometryTopic>odom</odometryTopic>
                <odometryFrame>odom</odometryFrame>
                <robotBaseFrame>base_link</robotBaseFrame>
                <publishWheelTF>false</publishWheelTF>
                <publishWheelJointState>false</publishWheelJointState>
                <legacyMode>false</legacyMode>

                <!-- Config -->
                <wheelSeparation>${wheel_separation}</wheelSeparation>
                <wheelDiameter>${wheel_radius*2}</wheelDiameter>
                <wheelAcceleration>0</wheelAcceleration>
                <wheelTorque>50</wheelTorque>
                <updateRate>100.0</updateRate>

                <leftJoint>base_link_right_wheel_joint</leftJoint>
                <rightJoint>base_link_left_wheel_joint</rightJoint>
                <rosDebugLevel>na</rosDebugLevel>
                <publishTf>true</publishTf>
                <tf_prefix>$(arg ns)</tf_prefix>
                <!-- Odometry Source?? -->
            </plugin>
            <!--
            <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
                <robotNamespace>$(arg ns)</robotNamespace>
                <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
                <robotParam>$(arg ns)/urdf</robotParam>
            </plugin>
            -->

        </gazebo>

        <!-- Contact -->
        <gazebo reference="base_link">
            <sensor name="bumper" type="contact">
                <always_on>true</always_on>
                <update_rate>50</update_rate>
                <contact>
                    <collision>base_footprint_fixed_joint_lump__base_link_collision_1</collision>
                </contact>
                <plugin name="base_link_bumper" filename="libgazebo_ros_bumper.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>50</updateRate>
                    <bumperTopicName>$(arg ns)/bumper</bumperTopicName>
                    <frameName>$(arg ns)</frameName>
                </plugin>
            </sensor>
        </gazebo>

        <!-- GAZEBO MATERIALS -->
        <gazebo reference="base_link">
            <material>Create/GreyTextured</material>
        </gazebo>
        <gazebo reference="rear_wheel_link">
            <material>Create/Black</material>
        </gazebo>

        <gazebo reference="caster_wheel_link">
            <material>Create/Black</material>
        </gazebo>

        <gazebo reference="base_caster_box_link">
            <material>Create/Black</material>
        </gazebo>

        <gazebo reference="base_caster_support_link">
            <material>Create/Black</material>
        </gazebo>

    </xacro:macro>
</robot>
